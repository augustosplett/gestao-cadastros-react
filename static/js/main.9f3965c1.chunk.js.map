{"version":3,"sources":["Styles/SharedStyles/styled.js","Pages/Home/index.js","Pages/Clientes/index.js","Pages/Produtos/index.js","routes.js","App.js","index.js"],"names":["Container","styled","div","Title","h1","Button","Link","Home","to","Clientes","useState","repository","setRepository","useEffect","localStorage","getItem","axios","get","then","response","data","clientsData","JSON","stringify","setItem","parse","upDatedDB","title","columns","field","editable","options","search","paging","tableLayout","addRowPosition","actionsColumnIndex","onRowAdd","newRow","Promise","resolve","reject","updatedRows","id","replace","c","crypto","getRandomValues","Uint8Array","toString","onRowDelete","selectedRow","index","tableData","splice","onRowUpdate","updatedRow","oldRow","Produtos","Routes","basename","path","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f3965c1.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n    min-height: 100vh;\n    min-width: 100vw;\n    display: flex;\n    flex-flow: column wrap;\n    align-content: center;\n    text-align: center;\n    margin: 0;\n    color: white;\n    background-color: black;\n\n`\nexport const Title = styled.h1`\n    font-family: 'Roboto', sans-serif;\n    font-size: 5rem;\n`;\nexport const Button = styled(Link)`\n    font-family: 'Roboto', sans-serif;    \n    border: solid;\n    padding: 0,5rem;\n    background-color:black;\n    text-align: center;\n    font-size:2rem;\n    color: white;\n    border-radius: 9px;\n    text-decoration: none;\n    margin: 10px;\n`;\n","import React from 'react';\nimport * as S from '../../Styles/SharedStyles/styled';\n\nconst Home = () => {\n\n    return(\n        <S.Container>\n            <S.Title>Painel de Gestão</S.Title>\n            <S.Button to='./clients'>Base de Cliente</S.Button>\n            <S.Button to='./products'>Inventário de Produtos</S.Button>\n        </S.Container>\n    )\n}\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport * as S from '../../Styles/SharedStyles/styled';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\n\nconst Clientes = () => {\n\n    function guidGenerator() {\n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      }\n      //https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid/2117523#2117523\n\n    const [repository, setRepository] = useState([]);\n\n    useEffect(() => {\n\n        if(localStorage.getItem('clientsDB') === null){\n            axios.get(`customer_data.json`).then(response => {\n                setRepository(response.data)\n                const clientsData = JSON.stringify(response.data);\n                localStorage.setItem(\"clientsDB\", clientsData);\n            })\n        }else{\n            const clientsData = localStorage.getItem(\"clientsDB\")\n            setRepository(JSON.parse(clientsData))\n        }\n\n    }, [])\n\n    useEffect(() => {\n        const upDatedDB = JSON.stringify(repository);\n        localStorage.setItem(\"clientsDB\", upDatedDB );\n    },[repository]);\n\n    const tableColumns = [\n        {title: 'Cod Cliente', field: 'id', editable: \"never\"},\n        {title: 'Nome', field: 'customer_name'},\n        {title: 'Phone', field: 'phone_number'},\n        {title: 'e-mail', field: 'email'},\n        {title: 'Endereço', field: 'adress'}\n    ];\n\n    return(\n        <S.Container>\n            <S.Title>Base Clientes</S.Title>\n            <S.Button to='/'>Voltar Para Painel de Gestão</S.Button>\n            <MaterialTable \n                title=\"Base Clientes\"\n                data={repository}\n                columns={tableColumns}\n                options={{\n                    search: false,\n                    paging: false,\n                    tableLayout: \"auto\",\n                    addRowPosition: \"first\",\n                    actionsColumnIndex: -1\n                }}\n                editable={{\n                    onRowAdd: (newRow) => new Promise((resolve, reject) => {\n                        const updatedRows = [...repository, {id:guidGenerator(),...newRow}];\n                        setRepository(updatedRows);\n                        resolve();\n\n                    }),\n                    onRowDelete: (selectedRow) => new Promise((resolve, reject) => {\n                        const index = selectedRow.tableData.id;\n                        const updatedRows = [...repository];\n                        updatedRows.splice(index, 1);\n                        setRepository(updatedRows);\n                        resolve();\n                    }),\n                    onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n                        const index = oldRow.tableData.id;\n                        const updatedRows = [...repository];\n                        updatedRows[index] = updatedRow;\n                        setRepository(updatedRows);\n                        resolve();\n\n                    })\n                }}\n            />\n        </S.Container>\n    )\n\n}\n\nexport default Clientes;","import React, { useEffect, useState } from \"react\";\nimport * as S from '../../Styles/SharedStyles/styled';\nimport MaterialTable from \"material-table\";\nimport axios from 'axios';\n\nconst Produtos = () => {\n\n    function guidGenerator() {\n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      }\n      //https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid/2117523#2117523\n\n    const [repository, setRepository] = useState([]);\n\n    useEffect(() => {\n        \n        if(localStorage.getItem('ProductsDB') === null){\n            axios.get(`products_data.json`).then(response => {\n                setRepository(response.data)\n                const clientsData = JSON.stringify(response.data);\n                localStorage.setItem(\"ProductsDB\", clientsData);\n            })\n        }else{\n            const clientsData = localStorage.getItem(\"ProductsDB\")\n            setRepository(JSON.parse(clientsData))\n        }\n\n    }, [])\n\n    useEffect(() => {\n        const upDatedDB = JSON.stringify(repository);\n        localStorage.setItem(\"ProductsDB\",upDatedDB);\n    },[repository]);\n\n    const tableColumns = [\n        {title: 'Cod Produto', field: 'id', editable: \"never\"},\n        {title: 'Fabricande', field: 'manufacturer'},\n        {title: 'Modelo', field: 'model'},\n        {title: 'Preço', field: 'price'},\n        {title: 'Qtde Disponível', field: 'avaliable_amount'}\n    ];\n\n    return(\n        <S.Container>\n            <S.Title>Base Produtos</S.Title>\n            <S.Button to='/'>Voltar Para Painel de Gestão</S.Button>\n            <MaterialTable \n                title=\"Base Produtos\"\n                data={repository}\n                columns={tableColumns}\n                options={{\n                    search: false,\n                    paging: false,\n                    tableLayout: \"auto\",\n                    addRowPosition: \"first\",\n                    actionsColumnIndex: -1\n                }}\n                editable={{\n                    onRowAdd: (newRow) => new Promise((resolve, reject)=>{\n                        const updatedRows = [...repository, {id:guidGenerator(),...newRow}];\n                        setRepository(updatedRows);\n                        resolve();\n\n                    }),\n                    onRowDelete: (selectedRow) => new Promise((resolve, reject) => {\n                        const index = selectedRow.tableData.id;\n                        const updatedRows = [...repository];\n                        updatedRows.splice(index, 1);\n                        setRepository(updatedRows);\n                        resolve();\n                    }),\n                    onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n                        const index = oldRow.tableData.id;\n                        const updatedRows = [...repository];\n                        updatedRows[index] = updatedRow;\n                        setRepository(updatedRows);\n                        resolve();\n\n                    })\n                }}\n            />\n        </S.Container>\n    )\n\n}\n\nexport default Produtos;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Clientes from \"./Pages/Clientes\"\nimport Produtos from \"./Pages/Produtos\"\n\nconst Routes = () =>{\n    return(\n        <Router basename={'/gestao-cadastros-react/'} >\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/clients\" exact component={Clientes} />\n                <Route path=\"/products\" exact component={Produtos} />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Routes;","import React from \"react\";\nimport Routes from \"../src/routes\";\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />\n\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}